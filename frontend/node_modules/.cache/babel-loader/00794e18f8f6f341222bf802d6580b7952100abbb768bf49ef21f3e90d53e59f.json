{"ast":null,"code":"//export const BASE_URL = \"http://localhost:3000\";\n//const REACT_APP_API_URL = process.env;\n\nconst chekValidity = res => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(res.status);\n};\nexport const register = data => {\n  return fetch(`${process.env.REACT_APP_API_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email: data.email,\n      password: data.password\n    })\n  }).then(chekValidity);\n};\nexport const authorize = data => {\n  return fetch(`${process.env.REACT_APP_API_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email: data.email,\n      password: data.password\n    })\n  }).then(chekValidity).then(data => {\n    if (data.token) {\n      localStorage.setItem(\"token\", data.token);\n      return data;\n    }\n  });\n};\nexport const checkToken = token => {\n  return fetch(`${process.env.REACT_APP_API_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(chekValidity);\n};\n\n/*\nconst chekValidity = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(res.status);\n};\n\nexport const register = (data) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: data.email,\n      password: data.password,\n    }),\n  }).then(chekValidity);\n};\n\nexport const authorize = (data) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: data.email,\n      password: data.password,\n    }),\n  })\n    .then(chekValidity)\n    .then((data) => {\n      if (data.token) {\n        localStorage.setItem(\"token\", data.token);\n        return data;\n      }\n    });\n};\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  }).then(chekValidity);\n};\n*/","map":{"version":3,"names":["chekValidity","res","ok","json","Promise","reject","status","register","data","fetch","process","env","REACT_APP_API_URL","method","headers","Accept","body","JSON","stringify","email","password","then","authorize","token","localStorage","setItem","checkToken","Authorization"],"sources":["C:/Users/Tima/dev/react-mesto-api-full-gha/frontend/src/utils/auth.js"],"sourcesContent":["//export const BASE_URL = \"http://localhost:3000\";\n//const REACT_APP_API_URL = process.env;\n\nconst chekValidity = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(res.status);\n};\n\nexport const register = (data) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: data.email,\n      password: data.password,\n    }),\n  }).then(chekValidity);\n};\n\nexport const authorize = (data) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: data.email,\n      password: data.password,\n    }),\n  })\n    .then(chekValidity)\n    .then((data) => {\n      if (data.token) {\n        localStorage.setItem(\"token\", data.token);\n        return data;\n      }\n    });\n};\n\nexport const checkToken = (token) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  }).then(chekValidity);\n};\n\n/*\nconst chekValidity = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(res.status);\n};\n\nexport const register = (data) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: data.email,\n      password: data.password,\n    }),\n  }).then(chekValidity);\n};\n\nexport const authorize = (data) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: data.email,\n      password: data.password,\n    }),\n  })\n    .then(chekValidity)\n    .then((data) => {\n      if (data.token) {\n        localStorage.setItem(\"token\", data.token);\n        return data;\n      }\n    });\n};\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  }).then(chekValidity);\n};\n*/\n"],"mappings":"AAAA;AACA;;AAEA,MAAMA,YAAY,GAAIC,GAAG,IAAK;EAC5B,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACnB;EACA,OAAOC,OAAO,CAACC,MAAM,CAACJ,GAAG,CAACK,MAAM,CAAC;AACnC,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAIC,IAAI,IAAK;EAChC,OAAOC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,SAAQ,EAAE;IACtDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,KAAK,EAAEX,IAAI,CAACW,KAAK;MACjBC,QAAQ,EAAEZ,IAAI,CAACY;IACjB,CAAC;EACH,CAAC,CAAC,CAACC,IAAI,CAACrB,YAAY,CAAC;AACvB,CAAC;AAED,OAAO,MAAMsB,SAAS,GAAId,IAAI,IAAK;EACjC,OAAOC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,SAAQ,EAAE;IACtDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,KAAK,EAAEX,IAAI,CAACW,KAAK;MACjBC,QAAQ,EAAEZ,IAAI,CAACY;IACjB,CAAC;EACH,CAAC,CAAC,CACCC,IAAI,CAACrB,YAAY,CAAC,CAClBqB,IAAI,CAAEb,IAAI,IAAK;IACd,IAAIA,IAAI,CAACe,KAAK,EAAE;MACdC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEjB,IAAI,CAACe,KAAK,CAAC;MACzC,OAAOf,IAAI;IACb;EACF,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMkB,UAAU,GAAIH,KAAK,IAAK;EACnC,OAAOd,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,WAAU,EAAE;IACxDC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE,kBAAkB;MAClCY,aAAa,EAAG,UAASJ,KAAM;IACjC;EACF,CAAC,CAAC,CAACF,IAAI,CAACrB,YAAY,CAAC;AACvB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}